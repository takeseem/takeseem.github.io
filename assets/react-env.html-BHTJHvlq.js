import{_ as s,c as e,a,o as t}from"./app-B69W9DEv.js";const l="/assets/vs-plugin1-CBmq9gAs.png",n="/assets/react-demo1-Bc6lEsuN.png",r="/assets/react-demo2-22HXt4zj.png",h="/assets/react-demo3-Bdp4KUal.png",p="/assets/react-demo4-DW5thEyW.png",d="/assets/react-demo5-DXOoohUN.png",c="/assets/react-demo6-COHMFd8H.png",o="/assets/react-demo7-oGvMjM41.png",k={};function g(m,i){return t(),e("div",null,i[0]||(i[0]=[a(`<p>在前端开发的世界里，React 是一个备受欢迎的框架，它不仅应用广泛，且上手快、扩展性强。如果你是一名刚开始接触 React 的开发者，本文将会是你启动 React 项目的最佳指南。通过这篇文章，你将学会如何从零搭建一个 React 项目，并成功运行它。</p><h2 id="步骤一-安装-fnm-和-node-js" tabindex="-1"><a class="header-anchor" href="#步骤一-安装-fnm-和-node-js"><span>步骤一：安装 fnm 和 Node.js</span></a></h2><p>React 项目的基础是 Node.js，选择合适的 Node 版本是成功运行项目的关键。为此，我们推荐使用 fnm 作为 Node.js 版本管理工具，它操作简单、性能出色，特别适合多版本 Node.js 的切换和管理。</p><ol><li>安装 FNM 工具 首先，我们需要安装 FNM。以下是适用于 Linux 系统的安装步骤：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 fnm (Fast Node Manager)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -fsSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://fnm.vercel.app/install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 激活 fnm</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>安装 Node.js 使用 FNM 安装指定的 Node.js 版本。我们以 Node.js 22 为例：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装并使用 Node.js v22</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install-if-missing</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 22</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 验证 Node.js 版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 结果应为 v22.9.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 验证 npm 版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 结果应为 10.8.3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以根据项目的需求自由选择合适的 Node.js 版本。</p><h2 id="步骤二-使用-create-react-app-创建项目" tabindex="-1"><a class="header-anchor" href="#步骤二-使用-create-react-app-创建项目"><span>步骤二：使用 Create React App 创建项目</span></a></h2><p>现在 Node.js 环境已经搭建完毕，接下来就是创建 React 项目了。我们使用 Facebook 官方推荐的工具 Create React App 快速生成项目模板。</p><p>首先我们为项目创建一个工作目录，再用 npx 来创建 React 项目：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create-react-app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo-kanban</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Create React App 会自动为你生成基础的项目结构，包含必要的依赖和配置，非常适合初学者快速上手。</p><h2 id="步骤三-版本控制-git-初始提交" tabindex="-1"><a class="header-anchor" href="#步骤三-版本控制-git-初始提交"><span>步骤三：版本控制 - Git 初始提交</span></a></h2><p>为了更好地管理代码，我们可以通过 Git 初始化项目仓库并提交初始代码：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo-kanban</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;初始导入&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 Git 进行版本管理，不仅可以记录项目的历史，还能轻松与团队协作。</p><p>git 下载：https://git-scm.com/downloads</p><h2 id="步骤四-安装开发工具-ide" tabindex="-1"><a class="header-anchor" href="#步骤四-安装开发工具-ide"><span>步骤四：安装开发工具（IDE）</span></a></h2><p>在开发过程中，选择一个合适的编辑器将极大提升你的效率。这里推荐使用 Visual Studio Code (VSCode)，它不仅免费且功能强大，还拥有丰富的插件支持。如果你愿意尝试收费的 IDE，WebStorm 也是一个不错的选择，提供 30 天试用期。</p><p>vscode 下载：https://code.visualstudio.com/</p><p>推荐安装的插件</p><ul><li>简体中文语言包：优化中文用户的使用体验。</li><li>国产 AI 辅助编程插件 Fitten Code：智能代码补全，提升开发效率。 <img src="`+l+'" alt="vscode plugins" loading="lazy"></li></ul><h2 id="步骤五-运行和调试-react-项目" tabindex="-1"><a class="header-anchor" href="#步骤五-运行和调试-react-项目"><span>步骤五：运行和调试 React 项目</span></a></h2><p>现在，我们已经准备好了 React 项目，接下来就是启动和调试项目了。</p><ol><li>启动项目</li></ol><blockquote><p>使用 VSCode 打开项目文件夹 demo-kanban，然后通过以下两种方式启动服务：</p></blockquote><ul><li>方法一：在终端启动（按下快捷键 <code>Ctrl + `` 打开终端），输入以下命令：</code>npm start`，服务启动成功后，浏览器会自动打开项目主页 <a href="http://localhost:3000/" target="_blank" rel="noopener noreferrer">http://localhost:3000/</a><img src="'+n+'" alt="react demo start" loading="lazy"></li><li>方法二：使用 VSCode 的“运行和调试”功能，点击 VSCode 界面左侧的“运行和调试”按钮，选择 start 脚本来启动项目。 <img src="'+r+'" alt="react demo start2" loading="lazy"></li></ul><ol start="2"><li>调试项目</li></ol><blockquote><p>如果你想调试客户端代码，可以按如下步骤操作：</p></blockquote><ul><li><p>在 function App() 函数左侧点击，设置断点</p><figure><img src="'+h+'" alt="react demo start3" tabindex="0" loading="lazy"><figcaption>react demo start3</figcaption></figure></li><li><p>修改调试配置，将默认端口从 8080 修改为 3000，以匹配 React 开发服务器的端口</p><p><img src="'+p+'" alt="react demo start4" loading="lazy"><img src="'+d+'" alt="react demo start5" loading="lazy"></p></li><li><p>启动 Web 调试，开始实时调试代码</p><figure><img src="'+c+`" alt="react demo start6" tabindex="0" loading="lazy"><figcaption>react demo start6</figcaption></figure></li></ul><h2 id="步骤六-保存工作成果——提交代码" tabindex="-1"><a class="header-anchor" href="#步骤六-保存工作成果——提交代码"><span>步骤六：保存工作成果——提交代码</span></a></h2><p>在代码开发的过程中，良好的提交习惯是非常重要的。每次提交代码时，都应该确保提交信息清晰、简洁，能够准确反映此次代码更改的内容。以下是提交代码时的一些建议：</p><p><strong>代码提交的最佳实践</strong></p><ol><li>原子性提交：每次提交应尽量包含单一的功能或改动，确保每个提交都能独立存在且不会破坏项目的运行。这有助于日后回溯和查找问题时更加方便。</li><li>提交信息清晰有力：提交信息应该简洁明了，能够准确描述此次提交的目的。例如：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;新增登录功能&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;修复首页加载缓慢的问题&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>频繁提交，保持进度：频繁的小幅提交不仅能记录开发过程中的每一个步骤，还可以减少回滚时的工作量。如果一次提交过多内容，不仅不利于回溯，也容易混淆具体的更改细节。</li><li>代码提交前的自检：提交之前，记得检查代码是否通过所有单元测试，确保没有语法错误、未完成的部分或临时调试代码。 <img src="`+o+'" alt="react demo commit" loading="lazy"></li></ol><h2 id="步骤七-react-开发工具" tabindex="-1"><a class="header-anchor" href="#步骤七-react-开发工具"><span>步骤七：React 开发工具</span></a></h2><p>为了更方便地调试 React 组件状态和性能，我们推荐 <a href="https://chromewebstore.google.com/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=zh" target="_blank" rel="noopener noreferrer">安装 React Developer Tools</a>，这是一款非常实用的 Chrome 浏览器扩展，帮助你深入了解 React 组件树的内部工作原理。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过本文，你应该已经学会了如何从零开始搭建一个 React 项目，并顺利运行它。无论是 Node.js 环境的安装，还是使用 Create React App 快速生成项目，接下来你都可以更加顺畅地投入到 React 的学习和开发中。</p><p>如果你觉得这篇文章对你有帮助，请不要忘记点赞、转发和收藏！你的关注是我继续输出优质内容的动力，也让我为大家带来更多干货和实战技巧！感恩每一位读者的支持与鼓励！ 🙌</p>',42)]))}const u=s(k,[["render",g],["__file","react-env.html.vue"]]),y=JSON.parse('{"path":"/code/fe/react/react-env.html","title":"React 项目搭建与运行：从零开始你的 React 之旅","lang":"zh-CN","frontmatter":{"title":"React 项目搭建与运行：从零开始你的 React 之旅","shortTitle":"React 项目搭建与运行","icon":"screwdriver-wrench","date":"2024-10-07T15:11:36.000Z","category":["前端","react"],"tag":["react"],"order":10,"description":"在前端开发的世界里，React 是一个备受欢迎的框架，它不仅应用广泛，且上手快、扩展性强。如果你是一名刚开始接触 React 的开发者，本文将会是你启动 React 项目的最佳指南。通过这篇文章，你将学会如何从零搭建一个 React 项目，并成功运行它。 步骤一：安装 fnm 和 Node.js React 项目的基础是 Node.js，选择合适的 N...","head":[["meta",{"property":"og:url","content":"https://www.takeseem.com/code/fe/react/react-env.html"}],["meta",{"property":"og:site_name","content":"全球指数"}],["meta",{"property":"og:title","content":"React 项目搭建与运行：从零开始你的 React 之旅"}],["meta",{"property":"og:description","content":"在前端开发的世界里，React 是一个备受欢迎的框架，它不仅应用广泛，且上手快、扩展性强。如果你是一名刚开始接触 React 的开发者，本文将会是你启动 React 项目的最佳指南。通过这篇文章，你将学会如何从零搭建一个 React 项目，并成功运行它。 步骤一：安装 fnm 和 Node.js React 项目的基础是 Node.js，选择合适的 N..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-05T07:20:46.000Z"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:published_time","content":"2024-10-07T15:11:36.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-05T07:20:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"React 项目搭建与运行：从零开始你的 React 之旅\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-07T15:11:36.000Z\\",\\"dateModified\\":\\"2024-11-05T07:20:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全球指数\\",\\"url\\":\\"https://www.takeseem.com\\"}]}"]]},"headers":[{"level":2,"title":"步骤一：安装 fnm 和 Node.js","slug":"步骤一-安装-fnm-和-node-js","link":"#步骤一-安装-fnm-和-node-js","children":[]},{"level":2,"title":"步骤二：使用 Create React App 创建项目","slug":"步骤二-使用-create-react-app-创建项目","link":"#步骤二-使用-create-react-app-创建项目","children":[]},{"level":2,"title":"步骤三：版本控制 - Git 初始提交","slug":"步骤三-版本控制-git-初始提交","link":"#步骤三-版本控制-git-初始提交","children":[]},{"level":2,"title":"步骤四：安装开发工具（IDE）","slug":"步骤四-安装开发工具-ide","link":"#步骤四-安装开发工具-ide","children":[]},{"level":2,"title":"步骤五：运行和调试 React 项目","slug":"步骤五-运行和调试-react-项目","link":"#步骤五-运行和调试-react-项目","children":[]},{"level":2,"title":"步骤六：保存工作成果——提交代码","slug":"步骤六-保存工作成果——提交代码","link":"#步骤六-保存工作成果——提交代码","children":[]},{"level":2,"title":"步骤七：React 开发工具","slug":"步骤七-react-开发工具","link":"#步骤七-react-开发工具","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1730791246000,"updatedTime":1730791246000,"contributors":[{"name":"takeseem","email":"takeseem@gmail.com","commits":1}]},"readingTime":{"minutes":5.15,"words":1546},"filePathRelative":"code/fe/react/react-env.md","localizedDate":"2024年10月7日","excerpt":"<p>在前端开发的世界里，React 是一个备受欢迎的框架，它不仅应用广泛，且上手快、扩展性强。如果你是一名刚开始接触 React 的开发者，本文将会是你启动 React 项目的最佳指南。通过这篇文章，你将学会如何从零搭建一个 React 项目，并成功运行它。</p>\\n<h2>步骤一：安装 fnm 和 Node.js</h2>\\n<p>React 项目的基础是 Node.js，选择合适的 Node 版本是成功运行项目的关键。为此，我们推荐使用 fnm 作为 Node.js 版本管理工具，它操作简单、性能出色，特别适合多版本 Node.js 的切换和管理。</p>\\n<ol>\\n<li>安装 FNM 工具\\n首先，我们需要安装 FNM。以下是适用于 Linux 系统的安装步骤：</li>\\n</ol>","autoDesc":true}');export{u as comp,y as data};
