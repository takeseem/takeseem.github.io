import{_ as t,c as i,a as o,o as a}from"./app-C4a0fRix.js";const n={};function c(p,e){return a(),i("div",null,e[0]||(e[0]=[o('<p>CoroutineDispatcher 决定了协程运行的线程，不同的 Dispatcher 会将协程分派到不同的线程池中执行。</p><h2 id="kotlin-预定义的-dispatcher" tabindex="-1"><a class="header-anchor" href="#kotlin-预定义的-dispatcher"><span>Kotlin 预定义的 Dispatcher</span></a></h2><ul><li><p><code>.Main</code>：主线程 Dispatcher，用于更新 UI、处理用户交互等。</p></li><li><p><code>.IO</code>：用于磁盘或网络等 I/O 操作，如读写文件、网络请求。</p></li><li><p><code>.Default</code>：用于 CPU 密集型任务，如排序、复杂计算等。</p></li><li><p><code>.Unconfined</code>：协程将在调用它的线程中启动，但后续可能会在其他线程中恢复。相比其它 Dispatcher 不会线程切换。</p></li></ul><p>如果不确定用哪个，用 <code>Dispatcher.Default</code></p>',4)]))}const l=t(n,[["render",c],["__file","kotlin-dispatchers.html.vue"]]),s=JSON.parse('{"path":"/code/kotlin/kotlin-dispatchers.html","title":"Kotlin 协程之 Dispatchers","lang":"zh-CN","frontmatter":{"title":"Kotlin 协程之 Dispatchers","icon":"shuffle","date":"2024-06-18T08:25:32.000Z","category":["kotlin"],"tag":["kotlin"],"description":"CoroutineDispatcher 决定了协程运行的线程，不同的 Dispatcher 会将协程分派到不同的线程池中执行。 Kotlin 预定义的 Dispatcher .Main：主线程 Dispatcher，用于更新 UI、处理用户交互等。 .IO：用于磁盘或网络等 I/O 操作，如读写文件、网络请求。 .Default：用于 CPU 密集型任...","head":[["meta",{"property":"og:url","content":"https://www.takeseem.com/code/kotlin/kotlin-dispatchers.html"}],["meta",{"property":"og:site_name","content":"全球指数"}],["meta",{"property":"og:title","content":"Kotlin 协程之 Dispatchers"}],["meta",{"property":"og:description","content":"CoroutineDispatcher 决定了协程运行的线程，不同的 Dispatcher 会将协程分派到不同的线程池中执行。 Kotlin 预定义的 Dispatcher .Main：主线程 Dispatcher，用于更新 UI、处理用户交互等。 .IO：用于磁盘或网络等 I/O 操作，如读写文件、网络请求。 .Default：用于 CPU 密集型任..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-04T01:13:20.000Z"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:published_time","content":"2024-06-18T08:25:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-04T01:13:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kotlin 协程之 Dispatchers\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-18T08:25:32.000Z\\",\\"dateModified\\":\\"2024-11-04T01:13:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全球指数\\",\\"url\\":\\"https://www.takeseem.com\\"}]}"]]},"headers":[{"level":2,"title":"Kotlin 预定义的 Dispatcher","slug":"kotlin-预定义的-dispatcher","link":"#kotlin-预定义的-dispatcher","children":[]}],"git":{"createdTime":1730682800000,"updatedTime":1730682800000,"contributors":[{"name":"takeseem","email":"takeseem@gmail.com","commits":1}]},"readingTime":{"minutes":0.53,"words":160},"filePathRelative":"code/kotlin/kotlin-dispatchers.md","localizedDate":"2024年6月18日","excerpt":"<p>CoroutineDispatcher 决定了协程运行的线程，不同的 Dispatcher 会将协程分派到不同的线程池中执行。</p>\\n<h2>Kotlin 预定义的 Dispatcher</h2>\\n<ul>\\n<li>\\n<p><code>.Main</code>：主线程 Dispatcher，用于更新 UI、处理用户交互等。</p>\\n</li>\\n<li>\\n<p><code>.IO</code>：用于磁盘或网络等 I/O 操作，如读写文件、网络请求。</p>\\n</li>\\n<li>\\n<p><code>.Default</code>：用于 CPU 密集型任务，如排序、复杂计算等。</p>\\n</li>\\n<li>\\n<p><code>.Unconfined</code>：协程将在调用它的线程中启动，但后续可能会在其他线程中恢复。相比其它 Dispatcher 不会线程切换。</p>\\n</li>\\n</ul>","autoDesc":true}');export{l as comp,s as data};
